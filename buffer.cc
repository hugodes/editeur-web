//Créateur: Hugo des Longchamps//Modifications: Hugo des Longchamps#include <iostream>using namespace std;#include "DOM.h"#include "Ligne.h"Buffer::Buffer(){    dom = NULL;    lignes = NULL;    cheminFichTemp = ".nouveau_fichier.tmp";}Buffer::Buffer(char cheminFichier[]){    //dom = DOM(cheminFichier);    setLignes(cheminFichier);    cheminFichTemp = strcat(".", cheminFichier);    cheminFichTemp = strcat(cheminFichier, ".tmp");}Buffer::~Buffer(){}void Buffer::ajouterLigneA(Ligne l, int position){    list<Ligne>::iterator il;    il+=(position-1);    il = insert(il, Ligne);    sauvTemp();    majDOM();}DOM Buffer::getDom()const{    return dom;}void setDom(const DOM &d){    dom = d;}liste<Ligne> getLignes()const{    return lignes;}void setLignes(const list<Ligne> &l){    lignes = l;    sauvTemp();    majDOM();}void setLignes(char cheminFichier[]){    FILE * pFichier;    char buffer[1024];    if (lignes == NULL){        lignes = list<Ligne>();    }    pFichier =  fopen(cheminFichier, "r");    while (!feof(pFichier)){        if (fgets(buffer, 1024, pFichier)==NULL){            break;        }        Ligne nouvLigne = Ligne(buffer);        lignes.push_back(nouvLigne);    }    fclose(pFichier);    sauvTemp();    majDOM();}void Buffer::affiche(ostream & os)const{    list<Ligne>::iterator il;    for (il=lignes.begin(); il!=lignes.end(); i++){        os<<*il;    }}void Buffer::saisie(istream &is){    char buffer[1024]    cout<<"Entrer un ligne qui serra ajoutée au buffer:\n";    is.getLine(buffer, 1024);    sauvTemp();    majDOM();}void Buffer::sauvTemp(){    FILE * pFichier;    pFichier = fopen(chemFichTemp, "w");    list<Ligne>::iterator il;    for (il=lignes.begin(); il!=lignes.end(); i++){        fputs(*il.toString(), pFichier);    }    fclose(pFichier);}void Buffer::majDOM(){    dom = DOM(chemFichTemp);}ostream& operator<<(ostream &os, const Buffer &b){    b.affiche(os);    return os;}ostream& operator>>(istream &is, Buffer &b){    b.saisie(is);    return is;}